Объекты получают указатель на родителя в момент создания. 
А не append_to как было раньше.
Потому что так гораздо проще по коду получается.
А смысла в append_to за 3 месяца ни разу не появилось (я думал двигать объекты между родителями).

*****
В описании уровня yaml и genesis, входные ссылки и выходные называть in, out а не links_in, links_out.

update: решено использовать links_out вместо out, links_in вместо in, т.к. так все-таки яснее что происходит. ну и обратная совместимость. пока потянет.

****

Проблема подключения A.лок. ячейка -> глоб канал -> B.лок. канал (или ячейка): 
как получать значения из лок. ячейки?
идея: запрашивать явно. например по отдельному каналу слать запросы,
 на которые A подписывается явно (а точнее генезис его подписывает).

*****
вводится абстракция. таким образом мы замыкаем выразительность языка.
кроме того у нас уже есть
- базовые элементы - ну просто вот они уже есть.
- их композиция - по каналам, по вложенности.

реализация - вводим ключ defines. там список из новых типов.
вопрос пока как:
defines: 
  - type: axis # это получается у нас другое значение
    items:
      - type: lines
        params:
          positions: [0,0,0, 10,0,0, 0,0,0, 0,10,0, 0,0,0, 0,0,10 ]
либо          
defines: 
  axis:
    items:
      - type: lines
        params:
          positions: [0,0,0, 10,0,0, 0,0,0, 0,10,0, 0,0,0, 0,0,10 ]
либо
items:
  - type: define
    name: axis
    items:
      - type: lines
        params:
          positions: [0,0,0, 10,0,0, 0,0,0, 0,10,0, 0,0,0, 0,0,10 ]
******
кстати место генезису в ппк если уж на то пошло. он ближе к ппк, базируется на нем.
а графикс-неграфикс это неважно.
а вот изивизи можно прямо в графиксе разместить. и команду grafix использовать..
пусть пиарит либу. ну т.е. будет либа и тул в одном флаконе.

******
решено убрать load, define и т.п. из уровня genesis.
пусть это пользовательские программы определяют.
это удобно - там у них все типы на виду тогда.
да и мало ли кому-то не надо load например.